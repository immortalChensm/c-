#include <iostream>
#include "Stu.h"
/**
类的构造函数
1、没有参数的叫默认构造函数
	即使没有定义，编译器也会自动生成合成的默认构造函数
	默认构造函数的定义：xxx(){} xxx()=default;不定义默认构造函数 xxx()=delete;
2、只有一个参数的构造函数
	2、1如果第一个参数不是本类的引用则为类型转换构造函数
	2、2如果第一个参数是本类的引用【如果有第其它参数必须有默认值否则就不是复制构造函数】则构成拷贝构造函数
	拷贝构造函数第一个参数可加上const 前缀修饰 表示内容不可修改
	拷贝构造函数不可加上禁用隐式explicit字段 
3、带多个参数的构造函数

构造函数一般由系统自动调用，在实例化类的时候
构造函数属于成员函数的特殊函数


**/

//void func(Stu stu)
//{
//	return;
//}

Stu func() {
	Stu s;
	return s;
}
int main()
{
	//Stu s;//触发默认构造函数
	//Stu s1{ 1,2,3 };//触发3个参数的构造函数
	//s1.display();
	//将参数当做函数的实参也会发生调用拷贝构造函数
	//func(s1);

	func
	();

	//Stu s2 = 10;//触发类型转换构造函数
	//s2.display();

	//Stu s3{ 100 };//触发类型转换构造函数
	//s3.display();
	//对象拷贝
	//Stu s21 = s1;
	//Stu s2 = { s1 };
	//Stu s3 = (s1);
	//Stu s4 = { {s1} };
	//Stu s5 = ((s1));
	//Stu s6 = { (s1) };
	//////Stu s7 = ({ s1 });
	//Stu s8{ s1 };
	//Stu s9(s1);
	//Stu s10{ {s1} };
	//Stu s11((s1));
	//Stu s12{ (s1) };
	//Stu s13({ s1 });
	////Stu s14{ {{s1}} };
	//Stu s15(((s1)));
	//Stu s16(((((((s1)))))));

	//s16.display();



	return 0;
}